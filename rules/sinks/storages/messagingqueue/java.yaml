sinks:

  - id: Messaging.Queue.Kafka.Producer
    name: Apache Kafka (Producer)
    domains:
      - apache.com
    patterns: 
      - "(?i).*((org[.]springframework[.]kafka[.]core[.]KafkaTemplate[.](doSend|send|sendAndReceive|convertAndSend|execute|commit|produce|write)[:])|(org[.]apache[.]kafka[.]clients[.]producer[.]KafkaProducer[.](sendOffsetsToTransaction|send|commit|produce|write|sendAsync)[:])|(com[.]salesforce[.]heroku[.]kafka[.]producer[.]HerokuKafkaProducer[.]send[:])|(io[.]confluent[.]kafka[.]serializers[.]KafkaAvroSerializer[.]serialize[:])|(io[.]lenses[.]kafka[.]client[.]producer[.]Producer[.]send)|(io[.]confluent[.]kafka[.]clients[.]producer[.]KafkaProducer[.]send)|(io[.]quarkus[.]kafka[.]producer[.]KafkaProducer[.]send)|(io.confluent.kafka.serializers.KafkaJsonSerializer.serialize)|(org[.]apache[.]kafka[.]clients[.]producer[.]ProducerRecord[.]<init>)).*"
    tags:

  - id: Messaging.Queue.Kafka.Consumer
    name: Apache Kafka (Consumer)
    domains:
      - apache.com
    patterns:
      - "(?i)((org[.]springframework[.]kafka[.]core[.]KafkaConsumer[.](receive|poll|subscribe)[:])|(org[.]apache[.]kafka[.]clients[.]consumer[.]Consumer[.](resume|commitAsync))|(org[.]apache[.]kafka[.]clients[.]consumer[.]((ConsumerRecord[.](partition|topic|count|value))|(KafkaConsumer[.](poll|receive|subscribe|unsubscribe|assign|commit|seek|pause|resume|close|commitAsync|beginningOffsets)[:])))|(org[.]springframework[.]kafka[.]listener[.]MessageListener[.]onMessage)|(org[.]springframework[.]kafka[.]listener[.]KafkaMessageListenerContainer[.](start|stop|pause|resume))|(org[.]apache[.]kafka[.]common[.]serialization[.]StringDeserializer[.]deserialize)|(com[.]salesforce[.]kafka[.]client[.]consumer[.]KafkaConsumer[.](subscribe|unsubscribe|assign|seek|seekToBeginning|seekToEnd|poll))|(org[.]springframework[.]kafka[.]core[.]DefaultKafkaConsumerFactory[.]<init>)|(org[.]apache[.]kafka[.]common[.]serialization[.]Consumer<K,V>[.]<init>)).*"
    tags:

  - id: Messaging.Queue.AMQP.Rabbit.Producer
    name: RabbitMq (Producer)
    domains:
      - rabbitmq.com
    patterns: 
      - "(?i).*(org[.]springframework[.]amqp[.]rabbit[.]core[.]RabbitTemplate[.](doSend|send|sendAndReceive|convertAndSend|execute)[:]).*"
    tags:

  - id: Messaging.Service.JMS.Producer
    name: JMS (Producer)
    domains:
      - springframework.org
    patterns: 
      - "(?i).*(org[.]springframework[.]jms[.]core[.]JmsTemplate[.](doSend|send|sendAndReceive|convertAndSend|execute)[:]|(jakarta[.]jms[.]JMSProducer|javax[.]jms[.]MessageProducer)[.](send|setProperty)[:]).*"
    tags:

  - id: Messaging.Service.AmazonSQS.Producer
    name: Amazon SQS (Producer)
    domains:
      - amazonaws.com
    patterns: 
      - "(?i).*(com[.]amazonaws[.]services[.]sqs[.](model[.]SendMessageRequest[.](set|with)MessageBody[:]|AmazonSQS[.](sendMessage|sendMessageBatch))).*"
    tags:
    
  - id: Messaging.Service.AmazonSQS.Consumer
    name: Amazon SQS (Consumer)
    domains:
      - amazonaws.com
    patterns: 
      - "(?i).*(com[.]amazonaws[.]services[.]sqs[.]AmazonSQS[.](receiveMessage|receiveMessageBatch|deleteMessage|deleteMessageBatch)).*"
    tags:

  - id: Messaging.Service.JMS.Consumer
    name: JMS (Consumer)
    domains:
      - springframework.org
    patterns: 
      - "(?i).*(org[.]springframework[.]jms[.]core[.]JmsTemplate[.](doReceive|receive)[:]|(jakarta[.]jms[.]JMSConsumer|javax[.]jms[.]MessageConsumer)[.](receive|receiveBody|receiveNoWait|receiveBodyNoWait)[:]).*"
    tags:
